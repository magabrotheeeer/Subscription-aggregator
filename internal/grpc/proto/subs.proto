syntax = "proto3";
package subs;
option go_package = "github.com/magabrotheeeer/subscription-aggregator/internal/grpc/gen;subs";

// gRPC Subscription-сервис 
service SubsService {
    rpc Create(CreateRequest) return (CreateResponse);
    rpc Read(ReadRequest) return (ReadResponse);
    rpc Update(UpdateRequest) return(UpdateResponse);
    rpc List(ListRequest) return (ListResponse);
    rpc Remove(RemoveRequest) return (RemoveResponse);
    rpc Countsum(CountsumRequest) return(CountsumResponse);
}

import "google/protobuf/timestamp.proto";

message Sub {
    string id = 1;
    string email = 2;
    string username = 3;
    string  = 4;
    string service_name = 5;
    google.protobuf.Timestamp start_date = 6;
    counter_months = 7;
}

message GetUserRequest {
    string username = 1;
}

message GetUserResponse {
    User user = 1;
}

message CreateUserRequest {
    string email = 1;
    string username = 2;
    string password_hash = 3;
    string role = 4;
}

message CreateUserResponse {
    User user = 1;
}

message UpdateUserRequest {
    string id = 1;
    string email = 2;
    string username = 3;
    string role = 4;
}

message UpdateUserResponse {
    User user = 1;
}

message DeleteUserRequest {
    string id = 1;
}

message DeleteUserResponse {
    bool success = 1;
}

message ListUsersRequest {
    int32 limit = 1;
    int32 offset = 2;
}

message ListUsersResponse {
    repeated User users = 1;
    int32 total_count = 2;
}

service UserService {
    rpc ReadSubs(ReadSubsRequest) returns (ReadSubsResponse);
    rpc CreateSubs(CreateSubsRequest) returns (CreateSubsResponse);
    rpc UpdateSubs(UpdateSubsRequest) returns (UpdateSubsResponse);
    rpc DeleteSubs(DeleteSubsRequest) returns (DeleteSubsResponse);
    rpc ListSubs(ListSubsRequest) returns (ListSubsResponse);
}