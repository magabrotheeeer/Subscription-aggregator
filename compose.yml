services:
  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - "${POSTGRES_DATA}:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    env_file:
      - .env
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - "${REDIS_DATA}:/data"
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - .env
    ports:
      - "${RABBITMQ_PORT_AMQP}:5672"
      - "${RABBITMQ_PORT_MANAGEMENT}:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  auth:
    build:
      context: .
      dockerfile: ./cmd/auth/Dockerfile
    env_file:
      - .env
    environment:
      - CONFIG_PATH=${CONFIG_PATH}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${AUTH_PORT}:50051"
    volumes:
      - "${CONFIG_PATH_VOLUMES}:/config/config.yaml:ro"

  app:
    build:
      context: .
      dockerfile: ./cmd/subscription-aggregator/Dockerfile
    env_file:
      - .env
    restart: always
    environment:
      - CONFIG_PATH=${CONFIG_PATH}
    ports:
      - "${APP_PORT}:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - "${CONFIG_PATH_VOLUMES}:/config/config.yaml:ro"

  scheduler:
    build:
      context: .
      dockerfile: ./cmd/scheduler/Dockerfile
    env_file:
      - .env
    environment:
      - CONFIG_PATH=${CONFIG_PATH}
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - "${CONFIG_PATH_VOLUMES}:/config/config.yaml:ro"

  sender:
    build:
      context: .
      dockerfile: ./cmd/sender/Dockerfile
    env_file:
      - .env
    environment:
      - CONFIG_PATH=${CONFIG_PATH}
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - "${CONFIG_PATH_VOLUMES}:/config/config.yaml:ro"