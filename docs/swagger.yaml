basePath: /api/v1
definitions:
  login.Request:
    properties:
      password:
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  models.DummyEntry:
    properties:
      counter_months:
        description: Количество месяцев
        type: integer
      is_active:
        type: boolean
      price:
        description: Цена (>0)
        type: integer
      service_name:
        description: Название сервиса
        type: string
      start_date:
        description: Дата начала в формате 01-2006
        type: string
    required:
    - counter_months
    - is_active
    - price
    - service_name
    - start_date
    type: object
  models.DummyFilterSum:
    properties:
      counter_months:
        description: Количество месяцев подписки
        type: integer
      service_name:
        description: Название сервиса (опционально)
        type: string
      start_date:
        description: Дата начала периода
        type: string
    required:
    - counter_months
    - start_date
    type: object
  paymentcreate.CreatePaymentMethodRequestApp:
    properties:
      payment_method_token:
        type: string
    type: object
  paymentprovider.CreatePaymentResponse:
    properties:
      amount:
        properties:
          currency:
            description: валюта
            type: string
          value:
            description: сумма
            type: string
        type: object
      created_at:
        type: string
      id:
        description: ID платежа в ЮKassa
        type: string
      status:
        description: статус платежа, например "succeeded"
        type: string
    type: object
  paymentwebhook.Payload:
    properties:
      event:
        type: string
      object:
        properties:
          amount:
            properties:
              currency:
                description: валюта
                type: string
              value:
                description: сумма в строке, например "100.00"
                type: string
            type: object
          id:
            description: payment ID
            type: string
          metadata:
            additionalProperties:
              type: string
            description: для user_uid, subscription_id и др.
            type: object
          payment_method:
            properties:
              id:
                description: платёжный метод (card_id)
                type: string
            type: object
          status:
            description: статус платежа
            type: string
        type: object
    type: object
  register.Request:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  response.ErrorResponse:
    properties:
      error:
        example: invalid request body
        type: string
      status:
        example: Error
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API для управления подписками пользователей
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Subscription Aggregator API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Аутентифицирует пользователя по имени и паролю. Возвращает JWT
        и refresh-токен.
      parameters:
      - description: Учетные данные пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/login.Request'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная авторизация
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Некорректный JSON
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Неверные учетные данные
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Авторизация пользователя
      tags:
      - Auth
  /payments/create:
    post:
      consumes:
      - application/json
      description: Создает новый платеж через YooKassa для активной подписки пользователя
      parameters:
      - description: Данные для создания платежа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/paymentcreate.CreatePaymentMethodRequestApp'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное создание платежа
          schema:
            $ref: '#/definitions/paymentprovider.CreatePaymentResponse'
        "400":
          description: Некорректный JSON
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера при создании платежа
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Создать платеж
      tags:
      - Payments
  /payments/tokens:
    get:
      consumes:
      - application/json
      description: Возвращает список всех платежных токенов пользователя
      produces:
      - application/json
      responses:
        "200":
          description: Список платежных токенов
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера при получении токенов
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить список платежных токенов
      tags:
      - Payments
  /payments/webhook:
    post:
      consumes:
      - application/json
      description: Обрабатывает уведомления о статусе платежей от платежного провайдера
        YooKassa
      parameters:
      - description: Подпись webhook для проверки подлинности
        in: header
        name: X-Api-Signature
        required: true
        type: string
      - description: Данные уведомления от YooKassa
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/paymentwebhook.Payload'
      produces:
      - application/json
      responses:
        "200":
          description: Webhook обработан успешно
        "400":
          description: Некорректные данные webhook
        "401":
          description: Неверная подпись webhook
        "500":
          description: Ошибка сервера при обработке webhook
      summary: Webhook для обработки уведомлений от YooKassa
      tags:
      - Payments
  /register:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя по email, username и password
      parameters:
      - description: Данные нового пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/register.Request'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная регистрация
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Некорректный JSON
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Ошибка валидации данных
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера при регистрации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Регистрация нового пользователя
      tags:
      - Auth
  /subscriptions:
    get:
      consumes:
      - application/json
      description: Возвращает список подписок пользователя с учетом пагинации (limit
        и offset).
      parameters:
      - description: Максимальное количество записей (по умолчанию 10)
        example: 10
        in: query
        minimum: 1
        name: limit
        type: integer
      - description: Смещение для пагинации (по умолчанию 0)
        example: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список подписок
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка при получении списка
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Получить список подписок пользователя
      tags:
      - Subscriptions
    post:
      consumes:
      - application/json
      description: Создает новую подписку для текущего пользователя. Возвращает ID
        созданной записи.
      parameters:
      - description: Данные новой подписки
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DummyEntry'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное создание подписки
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Некорректный JSON
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера при создании подписки
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Создать новую подписку
      tags:
      - Subscriptions
  /subscriptions/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет подписку пользователя по её идентификатору. Возвращает
        количество удалённых записей.
      parameters:
      - description: ID подписки
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Подписка успешно удалена
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Некорректный ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Подписка не найдена
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка при удалении
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Удалить подписку по ID
      tags:
      - Subscriptions
    get:
      consumes:
      - application/json
      description: Возвращает подписку по её уникальному идентификатору.
      parameters:
      - description: ID подписки
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ с данными
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Некорректный ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Подписка не найдена
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Получить подписку по ID
      tags:
      - Subscriptions
    put:
      consumes:
      - application/json
      description: Обновляет данные существующей подписки пользователя по идентификатору.
      parameters:
      - description: ID подписки
        in: path
        name: id
        required: true
        type: integer
      - description: Обновлённые данные подписки
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DummyEntry'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное обновление
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Некорректный ID или JSON
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Подписка не найдена
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера при обновлении
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Обновить подписку по ID
      tags:
      - Subscriptions
  /subscriptions/sum:
    post:
      consumes:
      - application/json
      description: Подсчитывает общую сумму подписок пользователя с возможностью фильтрации.
      parameters:
      - description: Фильтры для подсчёта суммы
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DummyFilterSum'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный расчёт суммы
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Некорректный JSON
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Ошибка валидации фильтра
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера при вычислении суммы
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Подсчёт суммы подписок
      tags:
      - Subscriptions
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
