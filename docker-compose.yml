services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: original_db
      POSTGRES_USER: akhilgovmb
      POSTGRES_PASSWORD: testpostgres
    ports:
      - "5433:5432"
    volumes:
      - "C:/Users/akhilgovmb/docker/pgdata:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U akhilgovmb -d original_db"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7
    command: ["redis-server", "--requirepass", "test1234"]
    ports:
      - "6379:6379"
    volumes:
      - "C:/Users/akhilgovmb/docker/redisdata:/data"
    restart: always

  app:
    build: .
    restart: always
    environment:
      - CONFIG_PATH=/config/config.yaml
      - JWT_SECRET=aQwerty12345!@#SecretKeyExample67890_+ - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=original_db
      - DB_USER=akhilgovmb
      - DB_PASSWORD=testpostgres
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=test1234
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - "C:/Users/akhilgovmb/Desktop/Subscription-aggregator/config/config.yaml:/config/config.yaml:ro"
  test:
    build: .
    environment:
      - TEST_POSTGRES=postgres://akhilgovmb:testpostgres@db:5432/test?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["go", "test", "./...", "-v"]



volumes:
  pgdata:
  redisdata:
